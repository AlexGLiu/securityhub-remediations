version: 0.2

env:
  variables:
    STACKNAME: "CodeBuild-SecurityHubRemediatations"
phases:
  install:
    runtime-versions:
      # python: 3.8
      docker: 19
    commands:
      - echo Entered the install phase...
      # - yum update -y
      # - yum upgrade -y
    finally:
      - echo This always runs even if the update or install command fails 
  pre_build:
    commands:
      - echo Entered the pre_build phase...
      - aws --version
      # - uname -a
      # - aws codebuild batch-get-projects --names "SecurityHubRemediationsWorkshop-Master" --query projects[*].[name,arn,environment.image]
      # - env | grep CODEBUILD
    finally:
      - echo This always runs even if the login command fails 
  build:
    commands:
      - echo Entered the build phase...
      - echo Build started on `date`
      - aws cloudformation create-stack --template-body file://module1/securityhub-remediations-workshop.yml --stack-name $STACKNAME  
             --capabilities CAPABILITY_NAMED_IAM 
             --parameters ParameterKey=VpcId,ParameterValue=vpc-d6fe6cb1  
                          ParameterKey=Cloud9OwnerArn,ParameterValue=arn:aws:sts::369510138361:assumed-role/TeamRole/filiatra-Isengard
             --tags Key=CostCenter,Value=SecurityHubRemediations-Codebuild
      # --parameters ParameterKey=EnableGuardDuty,ParameterValue=False ParameterKey=EnableSecurityHub,ParameterValue=False
      - aws cloudformation wait stack-create-complete --stack-name $STACKNAME
      - export CLIINSTANCE=`aws cloudformation --profile developer describe-stack-resource --stack-name aws-cloud9-SecurityHubWorkshop-`aws cloudformation --profile developer describe-stack-resource --stack-name CodeBuild-SecurityHubRemediatations --logical-resource-id SecHubWorkshopEnv --query StackResourceDetail.PhysicalResourceId --output text`  --logical-resource-id Instance --query StackResourceDetail.PhysicalResourceId --output text`
      - aws ec2 associate-iam-instance-profile --iam-instance-profile Name=SecurityHubRemediationWorkshopCli --instance-id $CLIINSTANCE
      - aws ssm send-command --document-name AWS-RunShellScript 
            --parameters commands=["git clone https://github.com/FireballDWF/securityhub-remediations.git /home/ec2-user/environment/securityhub-remediations && 
                                    mkdir /home/ec2-user/environment/securityhub-remediations/output &&
                                    docker run -it --rm --group-add 501 -v /home/ec2-user/environment/securityhub-remediations/output:/home/custodian/output:rw -v /home/ec2-user/environment/securityhub-remediations:/home/custodian/securityhub-remediations:ro -v /home/ec2-user/.aws:/home/custodian/.aws:ro ${SECHUBWORKSHOP_CONTAINER} run --cache-period 0 -s /home/custodian/output -c /home/custodian/securityhub-remediations/module2/ec2-sechub-custom-actions.yml
                                   "] 
            --targets Key=instanceids,Values=$CLIINSTANCE --comment "CodeBuild Test" 
            --cloud-watch-output-config CloudWatchLogGroupName=/aws/ssm/AWS-RunShellScript,CloudWatchOutputEnabled=true
      # - aws cloudformation delete-stack --stack-name $STACKNAME
    finally:
      - echo This always runs even if the install command fails
  post_build:
    commands:
      - echo Entered the post_build phase...
      - echo Build completed on `date`
 